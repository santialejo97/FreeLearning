{"version":3,"sources":["actualizar.js","app.js","seccion.js"],"names":["alertar","alert","traerDatos","async","urlestudiante","estudianteact","fetch","method","data","json","console","log","forEach","element","estudianteEmail","estudianteNombre","estudiantePassword","error","pagina","usuario","usuarioNombre","usuarioEmail","usuarioPassword","usuarioPoliticaDatos","usuarioCarrera","iniciarPagina","llenarSelector","enviarObjeto","mostrarSeccion","cambiarSeccion","capturaDatosEstudiante","capturaDatosEmpleado","carrera","selector","document","querySelector","carreraNombre","carreraId","option","createElement","classList","add","value","innerHTML","appendChild","conectarApi","tabla","url","body","JSON","stringify","estudiantePoliticaDatos","fk_carreraId","headers","Content-Type","then","response","empleadoNombre","empleadoEmail","empleadoPassword","empleadoPoliticaDatos","addEventListener","e","target","trim","parseInt","mostrarAlerta","mensaje","tipo","alerta","textContent","setTimeout","remove","politicasAceptacion","politicas","getElementById","checked","validacionCampos","seccionAnterior","querySelectorAll","boton","preventDefault","dataset"],"mappings":"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","file":"bundle.js","sourcesContent":["function alertar(){\r\n    alert(\"Buenas...\");\r\n    traerDatos();\r\n}\r\n\r\nasync function traerDatos(){\r\n    try{\r\n        const urlestudiante = 'http://localhost:3000/api/estudiantes';\r\n        const estudianteact = await fetch(urlestudiante, {method:'GET'})\r\n        const data = await estudianteact.json();    \r\n        console.log(data)\r\n        data.forEach(element => {\r\n            const {estudianteEmail, estudianteNombre, estudiantePassword}=element;\r\n            console.log(estudianteEmail)\r\n        });\r\n    }catch (error) {\r\n        console.log(error)\r\n    }\r\n    \r\n}","// paginado de los formularios\r\nlet pagina=1;\r\n\r\n// objeto que se envia a la base de datos \r\nconst usuario={\r\n  usuarioNombre: '',\r\n  usuarioEmail: '',\r\n  usuarioPassword: '',\r\n  usuarioPoliticaDatos: '',\r\n  usuarioCarrera: ''\r\n}\r\n\r\ndocument.addEventListener(\"DOMContentLoaded\", ()=>{\r\n    iniciarPagina();   \r\n});\r\n\r\nfunction iniciarPagina(){\r\n\r\n  //LLenar selector de las carrera de la Universidad\r\n  llenarSelector();\r\n\r\n  // enviar objeto \r\n  enviarObjeto();\r\n\r\n  alertar();\r\n\r\n\r\n  // asigna la clase de mostrarseccion actual en la pagina \r\n  mostrarSeccion();\r\n\r\n  // cambiamos la seccion al formulario elegido\r\n  cambiarSeccion();\r\n\r\n  // Capturamos la informacion de formulario estudiantes\r\n  capturaDatosEstudiante();\r\n\r\n  // Capturamos la informacion de formulario Empleado\r\n  capturaDatosEmpleado();\r\n}\r\n\r\n// se trae infromacion de la base dedatos y se llena el selector \r\nasync function llenarSelector(){\r\n  // se conecta a la tabla de carreras\r\n  const urlcarrera= 'http://localhost:3000/api/carreras/';\r\n  try {\r\n    const carrera= await fetch(urlcarrera,{method:'GET'})\r\n    const data = await carrera.json();\r\n    \r\n  // se selecciona el select  \r\n    const selector= document.querySelector('#carrera')\r\n\r\n  // se recorrer el arreglo de las carreras\r\n  data.forEach(carrera =>{\r\n    const {carreraNombre, carreraId}= carrera;\r\n\r\n  //se crear elemneto option para agregar al select y se le asigna una carrera de el arreglo\r\n    const option = document.createElement('OPTION');\r\n    option.classList.add('opcionCarrera')\r\n    option.value= carreraId;\r\n    option.innerHTML=carreraNombre;\r\n\r\n  // se agregar el option de la carrera a el selector \r\n    selector.appendChild(option)\r\n  })\r\n  } catch (error) {\r\n    console.log(error)\r\n  }\r\n \r\n}\r\n\r\n// funcion de conexion de api para el envio de estudiantes\r\n function conectarApi(){\r\n  //  se conecta a el BackEnd y se realiza un metodo POST\r\n    try {\r\n      let tabla;\r\n      let url ;\r\n      if(pagina === 1){\r\n        tabla='estudiantes'\r\n        url=`http://localhost:3000/api/${tabla}/`\r\n        console.log(usuario)\r\n        fetch(url,{method:'POST',\r\n        body: JSON.stringify({\r\n          estudianteNombre:usuario.usuarioNombre,\r\n          estudianteEmail:usuario.usuarioEmail,\r\n          estudiantePassword: usuario.usuarioPassword,\r\n          estudiantePoliticaDatos: usuario.usuarioPoliticaDatos,\r\n          fk_carreraId: usuario.usuarioCarrera\r\n        }),\r\n        headers: {\r\n          'Content-Type': 'application/json'\r\n        }\r\n      })\r\n        .then(response => response.json())\r\n        .then(data => {\r\n          console.log(data)})\r\n      }else if(pagina === 2){\r\n        tabla='empleados'\r\n        url=`http://localhost:3000/api/${tabla}/`\r\n        console.log(usuario)\r\n        fetch(url,{method:'POST',\r\n        body: JSON.stringify({\r\n          empleadoNombre:usuario.usuarioNombre,\r\n          empleadoEmail:usuario.usuarioEmail,\r\n          empleadoPassword: usuario.usuarioPassword,\r\n          empleadoPoliticaDatos: usuario.usuarioPoliticaDatos,\r\n        }),\r\n        headers: {\r\n          'Content-Type': 'application/json'\r\n        }\r\n      })\r\n        .then(response => response.json())\r\n        .then(data => {\r\n          console.log(data)})\r\n      }\r\n     \r\n    } catch (error) {\r\n        console.log(error)\r\n    }\r\n}\r\n\r\n// funcion de captura de datos \r\nfunction capturaDatosEstudiante(){\r\n  // Capturamos el dato de nombre \r\n  const nombreInput= document.querySelector('#nombre')\r\n  nombreInput.addEventListener('input', (e)=>{\r\n    usuario.usuarioNombre= e.target.value.trim();\r\n    console.log(usuario) \r\n  })\r\n  \r\n  // Capturamos el dato de Carrera Universidad\r\n  const carreraSelector=document.querySelector('#carrera');\r\n  carreraSelector.addEventListener('click', e=>{\r\n  usuario.usuarioCarrera= parseInt(e.target.value);\r\n  console.log(usuario)\r\n  })\r\n\r\n  // Capturamos el correo del usuario\r\n  const correoInput=document.querySelector('#email');\r\n  correoInput.addEventListener('input',(e)=> {\r\n    usuario.usuarioEmail=e.target.value.trim();\r\n    console.log(usuario)\r\n    \r\n  })\r\n\r\n  // Capturamos la contraseÃ±a del usuario\r\n  const passInput= document.querySelector('#password');\r\n  passInput.addEventListener('input', (e)=>{\r\n    usuario.usuarioPassword=e.target.value.trim();\r\n    console.log(usuario)\r\n  }) \r\n\r\n}\r\n\r\nfunction capturaDatosEmpleado(){\r\n const nombreEmpleado = document.querySelector('#nombreempleado');\r\n nombreEmpleado.addEventListener('input', e =>{\r\n   usuario.usuarioNombre = e.target.value.trim();\r\n })\r\n\r\n const correoEmpleado= document.querySelector('#emailempleado');\r\n correoEmpleado.addEventListener('input', e =>{\r\n   usuario.usuarioEmail= e.target.value.trim();\r\n })\r\n\r\n const contraseÃ±aEmpleado= document.querySelector('#passwordempleado');\r\n contraseÃ±aEmpleado.addEventListener('input', e =>{\r\n   usuario.usuarioPassword= e.target.value.trim();\r\n })\r\n}\r\n\r\n// funcion de las alarmas\r\nfunction mostrarAlerta(mensaje , tipo){\r\n  const alerta= document.createElement('DIV');\r\n  alerta.textContent= mensaje;\r\n  alerta.classList.add('alerta')\r\n  if(tipo == 'error'){\r\n    alerta.classList.add('error');\r\n  }else{\r\n    alerta.classList.add('creado');\r\n  }\r\n\r\n  if(pagina=== 1){\r\n    const formulario= document.querySelector('.mensaje1');\r\n  formulario.appendChild(alerta);\r\n  }else{\r\n    const formulario2= document.querySelector('.mensaje2');\r\n  formulario2.appendChild(alerta);\r\n  }\r\n  setTimeout(()=>{\r\n    alerta.remove();\r\n  }, 5000)\r\n\r\n}\r\n\r\n// funcion de validacion de las politicas \r\nfunction politicasAceptacion(){\r\n  const politicas = document.getElementById('opt-in').checked;\r\n  console.log(politicas);\r\n  if(politicas){\r\n    usuario.usuarioPoliticaDatos=1;\r\n  }else{\r\n    usuario.usuarioPoliticaDatos=0;\r\n  }\r\n}\r\n\r\n// validacion de campos obligatorios \r\nfunction validacionCampos(){\r\n  if(pagina === 1){\r\n  if(usuario.usuarioNombre === '' || usuario.usuarioCarrera === '' || usuario.usuarioEmail === '' \r\n  || usuario.usuarioPassword === ''){\r\n   mostrarAlerta(\"Es necesario llenar nombre, contraseÃ±a, carrera y correo \", 'error');\r\n   console.log(usuario)\r\n  }else{\r\n   mostrarAlerta(\"Usuario Creado Correctamente\", 'correcto');\r\n   conectarApi();\r\n   console.log('estoy enviando ....')\r\n   console.log(usuario)\r\n  }\r\n  }else{\r\n    if(usuario.usuarioNombre === '' || usuario.usuarioEmail === '' \r\n  || usuario.usuarioPassword === ''){\r\n   mostrarAlerta(\"Es necesario llenar nombre, contraseÃ±a y correo \", 'error');\r\n   console.log(usuario)\r\n   console.log(pagina)\r\n  }else{\r\n   mostrarAlerta(\"Usuario Creado Correctamente\", 'correcto');\r\n   conectarApi();\r\n   console.log(pagina)\r\n   console.log('estoy enviando ....')\r\n   console.log(usuario)\r\n  }\r\n  } \r\n}\r\n\r\n// de ejecucion de el envio del usuario \r\nfunction enviarObjeto(){\r\n  const boton = document.querySelector('#envio')\r\n  boton.addEventListener('click',(e)=>{\r\n// se valida la informacion que se captura \r\nif(pagina === 1){\r\n  console.log(pagina)\r\n   // Capturamos la informacion de formulario estudiantes\r\n   capturaDatosEstudiante();\r\n}else{\r\n  console.log(pagina)\r\n  // Capturamos la informacion de formulario empleado\r\n  capturaDatosEmpleado();\r\n}\r\n    console.log(usuario)\r\n// validamos la aceptacion de las politicas \r\n politicasAceptacion();\r\n //validacion de los campos y la ejecucion con el API\r\n validacionCampos();\r\n})\r\n}\r\n\r\n","function mostrarSeccion(){\r\n    // elimina la clase de mostrar seccion si esta en otro formulario\r\n    const seccionAnterior = document.querySelector('.mostrarseccion');\r\n    if(seccionAnterior){\r\n        seccionAnterior.classList.remove('mostrarseccion')\r\n    }\r\n\r\n    // Asignamos la clase de mostrar seccion en el formulario actual \r\n    const seccionActual = document.querySelector(`#pagina-${pagina}`);\r\n    seccionActual.classList.add('mostrarseccion')\r\n}\r\n\r\nfunction cambiarSeccion(){\r\n    const botones=document.querySelectorAll(\".tabs button\");\r\n    botones.forEach((boton) =>{\r\n        boton.addEventListener('click', (e) =>{\r\n            e.preventDefault();\r\n            pagina = parseInt(e.target.dataset.pagina)\r\n\r\n            // se llama la funcion de mostrar seccion\r\n            mostrarSeccion()\r\n        })\r\n    })\r\n}"]}