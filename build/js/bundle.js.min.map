{"version":3,"sources":["app.js"],"names":["sync","require","usuario","usuarioNombre","usuarioEmail","usuarioPassword","usuarioPoliticaDatos","usuarioCarrera","iniciarPagina","llenarSelector","capturaDatos","enviarObjeto","async","fetch","method","then","response","json","data","console","log","carreraNombre","error","conectarApi","url","body","JSON","stringify","estudianteNombre","estudianteEmail","estudiantePassword","headers","Content-Type","document","querySelector","addEventListener","e","target","value","trim","carreraSelector","mostrarAlerta","mensaje","tipo","alerta","createElement","textContent","classList","add","appendChild","setTimeout","remove"],"mappings":"AAAA,MAAAA,KAAAA,MAAAC,QAAA,aAEAC,QAAA,CACAC,cAAA,GACAC,aAAA,GACAC,gBAAA,GACAC,qBAAA,GACAC,eAAA,IAOA,SAAAC,gBAGAC,iBAGAC,eAGAC,eAGAC,eAAAH,iBAGA,UACAI,MAFA,sCAEA,CAAAC,OAAA,QACAC,KAAAC,GAAAA,EAAAC,QACAF,KAAAG,IACAC,QAAAC,IAAAF,GACA,MAAAG,cAAAA,GAAAH,IAEA,MAAAI,GACAH,QAAAC,IAAAE,IAgBA,SAAAC,cAEA,IACA,MAAAC,EAAA,yCACAL,QAAAC,IAAAlB,SACAW,MAAAW,EAAA,CAAAV,OAAA,OACAW,KAAAC,KAAAC,UAAA,CACAC,iBAAA1B,QAAAC,cACA0B,gBAAA3B,QAAAE,aACA0B,mBAAA5B,QAAAG,kBAIA0B,QAAA,CACAC,eAAA,sBAGAjB,KAAAC,GAAAA,EAAAC,QACAF,KAAAG,IACAC,QAAAC,IAAAF,KACA,MAAAI,GACAH,QAAAC,IAAAE,IAKA,SAAAZ,eAEAuB,SAAAC,cAAA,WACAC,iBAAA,QAAAC,IACAlC,QAAAC,cAAAiC,EAAAC,OAAAC,MAAAC,SAKA,MAAAC,EAAAP,SAAAC,cAAA,YAAAI,MACApC,QAAAK,eAAAiC,EAKAP,SAAAC,cAAA,UACAC,iBAAA,QAAAC,IACAlC,QAAAE,aAAAgC,EAAAC,OAAAC,MAAAC,SAKAN,SAAAC,cAAA,aACAC,iBAAA,QAAAC,IACAlC,QAAAG,gBAAA+B,EAAAC,OAAAC,MAAAC,SAMA,SAAAE,cAAAC,EAAAC,GACA,MAAAC,EAAAX,SAAAY,cAAA,OACAD,EAAAE,YAAAJ,EACAE,EAAAG,UAAAC,IAAA,UACA,SAAAL,EACAC,EAAAG,UAAAC,IAAA,SAEAJ,EAAAG,UAAAC,IAAA,UAEAf,SAAAC,cAAA,wBACAe,YAAAL,GAEAM,WAAA,KACAN,EAAAO,UACA,KAIA,SAAAxC,eACAsB,SAAAC,cAAA,UACAC,iBAAA,QAAA,KAEA,IAAAjC,QAAAC,cACAsC,cAAA,oCAAA,UAEAA,cAAA,+BAAA,YACAlB,cACAJ,QAAAC,IAAA,0BA9HAa,SAAAE,iBAAA,mBAAA,KACA3B","file":"bundle.js","sourcesContent":["const { sync } = require(\"gulp-sass\");\r\n\r\nconst usuario={\r\n  usuarioNombre: '',\r\n  usuarioEmail: '',\r\n  usuarioPassword: '',\r\n  usuarioPoliticaDatos: '',\r\n  usuarioCarrera: ''\r\n}\r\n\r\ndocument.addEventListener(\"DOMContentLoaded\", ()=>{\r\n    iniciarPagina();   \r\n});\r\n\r\nfunction iniciarPagina(){\r\n\r\n  //LLenar selector de las carrera de la Universidad\r\n  llenarSelector();\r\n\r\n  // Capturamos la informqacion de formulario \r\n  capturaDatos();\r\n\r\n  // enviar objeto \r\n  enviarObjeto();\r\n}\r\n\r\nasync function llenarSelector(){\r\n  // se conecta a la tabla de carreras\r\n  const urlcarrera= 'http://localhost:3000/api/carreras/';\r\n  try {\r\n    const carrera= await fetch(urlcarrera,{method:'GET'})\r\n    .then(response => response.json())\r\n    .then(data =>{\r\n      console.log(data)\r\n      const {carreraNombre}=data;\r\n    })\r\n  } catch (error) {\r\n    console.log(error)\r\n  }\r\n  // // se selecciona el select \r\n  // const selector= document.querySelector('#carrera')\r\n  // // se recorrer el arreglo de las carreras\r\n  // carreraNombre.forEach(carrera =>{\r\n  //   //se crear elemneto option para agregar al select y se le asigna una carrera de el arreglo\r\n  //   const option = document.createElement('OPTION');\r\n  //   option.classList.add('opcionCarrera')\r\n  //   option.value= carrera\r\n  //   option.innerHTML=carrera;\r\n  // // se agregar el option de la carrera a el selector \r\n  //   selector.appendChild(option)\r\n  // })\r\n}\r\n\r\n function conectarApi(){\r\n  //  se conecta a el BackEnd y se realiza un metodo POST\r\n    try {\r\n      const url = 'http://localhost:3000/api/estudiantes/'\r\n      console.log(usuario)\r\n      fetch(url,{method:'POST',\r\n      body: JSON.stringify({\r\n        estudianteNombre:  usuario.usuarioNombre,\r\n        estudianteEmail:usuario.usuarioEmail,\r\n        estudiantePassword: usuario.usuarioPassword\r\n        // estudiantePoliticaDatos: type.INTEGER,\r\n        // fk_carreraId: type.INTEGER,\r\n      }),\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      }\r\n    })\r\n      .then(response => response.json())\r\n      .then(data => {\r\n        console.log(data)})\r\n    } catch (error) {\r\n        console.log(error)\r\n    }\r\n}\r\n\r\n\r\nfunction capturaDatos(){\r\n  // Capturamos el dato de nombre \r\n  const nombreInput= document.querySelector('#nombre')\r\n  nombreInput.addEventListener('input', (e)=>{\r\n    usuario.usuarioNombre= e.target.value.trim();\r\n    \r\n  })\r\n  \r\n  // Capturamos el dato de Carrera Universidad\r\n  const carreraSelector=document.querySelector('#carrera').value;\r\n    usuario.usuarioCarrera= carreraSelector;\r\n    \r\n  \r\n\r\n  // Capturamos el correo del usuario\r\n  const correoInput=document.querySelector('#email');\r\n  correoInput.addEventListener('input',(e)=> {\r\n    usuario.usuarioEmail=e.target.value.trim();\r\n    \r\n  })\r\n\r\n  // Capturamos la contraseÃ±a del usuario\r\n  const passInput= document.querySelector('#password');\r\n  passInput.addEventListener('input', (e)=>{\r\n    usuario.usuarioPassword=e.target.value.trim();\r\n    \r\n  })  \r\n}\r\n\r\n// funcion de las alarmas\r\nfunction mostrarAlerta(mensaje , tipo){\r\n  const alerta= document.createElement('DIV');\r\n  alerta.textContent= mensaje;\r\n  alerta.classList.add('alerta')\r\n  if(tipo == 'error'){\r\n    alerta.classList.add('error');\r\n  }else{\r\n    alerta.classList.add('creado');\r\n  }\r\n  const formulario= document.querySelector('.formulario_usuarios');\r\n  formulario.appendChild(alerta);\r\n\r\n  setTimeout(()=>{\r\n    alerta.remove();\r\n  }, 3000)\r\n\r\n}\r\n\r\nfunction enviarObjeto(){\r\n  const boton = document.querySelector('#envio')\r\n  boton.addEventListener('click',()=>{\r\n //   validacion de los campos y la ejecucion con el API\r\n if(usuario.usuarioNombre == ''){\r\n  mostrarAlerta(\"Todos los Campos son obligatorios\", 'error');\r\n }else{\r\n  mostrarAlerta(\"Usuario Creado Correctamente\", 'correcto');\r\n  conectarApi();\r\n  console.log('estoy enviando ....')\r\n }\r\n})\r\n}\r\n\r\n"]}