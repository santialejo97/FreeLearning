{"version":3,"sources":["app.js"],"names":["usuario","usuarioNombre","usuarioEmail","usuarioPassword","usuarioPoliticaDatos","usuarioCarrera","iniciarPagina","llenarSelector","capturaDatos","enviarObjeto","async","carrera","fetch","method","data","json","console","log","selector","document","querySelector","forEach","carreraNombre","carreraId","option","createElement","classList","add","value","innerHTML","appendChild","error","conectarApi","url","body","JSON","stringify","estudianteNombre","estudianteEmail","estudiantePassword","estudiantePoliticaDatos","fk_carreraId","headers","Content-Type","then","response","addEventListener","e","target","trim","parseInt","mostrarAlerta","mensaje","tipo","alerta","textContent","setTimeout","remove","politicasAceptacion","politicas","getElementById","checked","validacionCampos","preventDefault"],"mappings":"AACA,MAAAA,QAAA,CACAC,cAAA,GACAC,aAAA,GACAC,gBAAA,GACAC,qBAAA,GACAC,eAAA,IAOA,SAAAC,gBAGAC,iBAGAC,eAGAC,eAMAC,eAAAH,iBAGA,IACA,MAAAI,QAAAC,MAFA,sCAEA,CAAAC,OAAA,QACAC,QAAAH,EAAAI,OACAC,QAAAC,IAAAH,GAEA,MAAAI,EAAAC,SAAAC,cAAA,YAGAN,EAAAO,QAAAV,IACA,MAAAW,cAAAA,EAAAC,UAAAA,GAAAZ,EACAK,QAAAC,IAAAK,GAGA,MAAAE,EAAAL,SAAAM,cAAA,UACAD,EAAAE,UAAAC,IAAA,iBACAH,EAAAI,MAAAL,EACAC,EAAAK,UAAAP,EAGAJ,EAAAY,YAAAN,KAEA,MAAAO,GACAf,QAAAC,IAAAc,IAMA,SAAAC,cAEA,IACA,MAAAC,EAAA,yCACAjB,QAAAC,IAAAjB,SACAY,MAAAqB,EAAA,CAAApB,OAAA,OACAqB,KAAAC,KAAAC,UAAA,CACAC,iBAAArC,QAAAC,cACAqC,gBAAAtC,QAAAE,aACAqC,mBAAAvC,QAAAG,gBACAqC,wBAAAxC,QAAAI,qBACAqC,aAAAzC,QAAAK,iBAEAqC,QAAA,CACAC,eAAA,sBAGAC,KAAAC,GAAAA,EAAA9B,QACA6B,KAAA9B,IACAE,QAAAC,IAAAH,KACA,MAAAiB,GACAf,QAAAC,IAAAc,IAKA,SAAAvB,eAEAW,SAAAC,cAAA,WACA0B,iBAAA,QAAAC,IACA/C,QAAAC,cAAA8C,EAAAC,OAAApB,MAAAqB,SAKA9B,SAAAC,cAAA,YACA0B,iBAAA,QAAAC,IACA/C,QAAAK,eAAA6C,SAAAH,EAAAC,OAAApB,SAIAT,SAAAC,cAAA,UACA0B,iBAAA,QAAAC,IACA/C,QAAAE,aAAA6C,EAAAC,OAAApB,MAAAqB,SAKA9B,SAAAC,cAAA,aACA0B,iBAAA,QAAAC,IACA/C,QAAAG,gBAAA4C,EAAAC,OAAApB,MAAAqB,SAOA,SAAAE,cAAAC,EAAAC,GACA,MAAAC,EAAAnC,SAAAM,cAAA,OACA6B,EAAAC,YAAAH,EACAE,EAAA5B,UAAAC,IAAA,UACA,SAAA0B,EACAC,EAAA5B,UAAAC,IAAA,SAEA2B,EAAA5B,UAAAC,IAAA,UAEAR,SAAAC,cAAA,wBACAU,YAAAwB,GAEAE,WAAA,KACAF,EAAAG,UACA,KAKA,SAAAC,sBACA,MAAAC,EAAAxC,SAAAyC,eAAA,UAAAC,QACA7C,QAAAC,IAAA0C,GAEA3D,QAAAI,qBADAuD,EACA,EAEA,EAKA,SAAAG,mBACA,KAAA9D,QAAAC,eAAA,KAAAD,QAAAK,gBAAA,KAAAL,QAAAE,cACA,KAAAC,iBACAgD,cAAA,4DAAA,SACAnC,QAAAC,IAAAjB,SACA+C,EAAAgB,iBAEAZ,cAAA,+BAAA,YACAnB,cACAhB,QAAAC,IAAA,uBACAD,QAAAC,IAAAjB,UAKA,SAAAS,eACAU,SAAAC,cAAA,UACA0B,iBAAA,QAAAC,IAEAW,sBAEAI,qBA9JA3C,SAAA2B,iBAAA,mBAAA,KACAxC","file":"bundle.js","sourcesContent":["\r\nconst usuario={\r\n  usuarioNombre: '',\r\n  usuarioEmail: '',\r\n  usuarioPassword: '',\r\n  usuarioPoliticaDatos: '',\r\n  usuarioCarrera: ''\r\n}\r\n\r\ndocument.addEventListener(\"DOMContentLoaded\", ()=>{\r\n    iniciarPagina();   \r\n});\r\n\r\nfunction iniciarPagina(){\r\n\r\n  //LLenar selector de las carrera de la Universidad\r\n  llenarSelector();\r\n\r\n  // Capturamos la informqacion de formulario \r\n  capturaDatos();\r\n\r\n  // enviar objeto \r\n  enviarObjeto();\r\n\r\n\r\n}\r\n\r\n// se trae infromacion de la base dedatos y se llena el selector \r\nasync function llenarSelector(){\r\n  // se conecta a la tabla de carreras\r\n  const urlcarrera= 'http://localhost:3000/api/carreras/';\r\n  try {\r\n    const carrera= await fetch(urlcarrera,{method:'GET'})\r\n    const data = await carrera.json();\r\n    console.log(data)\r\n     // se selecciona el select  \r\n  const selector= document.querySelector('#carrera')\r\n\r\n  // se recorrer el arreglo de las carreras\r\n  data.forEach(carrera =>{\r\n    const {carreraNombre, carreraId}= carrera;\r\n    console.log(carreraNombre)\r\n\r\n  //se crear elemneto option para agregar al select y se le asigna una carrera de el arreglo\r\n    const option = document.createElement('OPTION');\r\n    option.classList.add('opcionCarrera')\r\n    option.value= carreraId;\r\n    option.innerHTML=carreraNombre;\r\n\r\n  // se agregar el option de la carrera a el selector \r\n    selector.appendChild(option)\r\n  })\r\n  } catch (error) {\r\n    console.log(error)\r\n  }\r\n \r\n}\r\n\r\n// funcion de conexion de api para el envio de estudiantes\r\n function conectarApi(){\r\n  //  se conecta a el BackEnd y se realiza un metodo POST\r\n    try {\r\n      const url = 'http://localhost:3000/api/estudiantes/'\r\n      console.log(usuario)\r\n      fetch(url,{method:'POST',\r\n      body: JSON.stringify({\r\n        estudianteNombre:  usuario.usuarioNombre,\r\n        estudianteEmail:usuario.usuarioEmail,\r\n        estudiantePassword: usuario.usuarioPassword,\r\n        estudiantePoliticaDatos: usuario.usuarioPoliticaDatos,\r\n        fk_carreraId: usuario.usuarioCarrera\r\n      }),\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      }\r\n    })\r\n      .then(response => response.json())\r\n      .then(data => {\r\n        console.log(data)})\r\n    } catch (error) {\r\n        console.log(error)\r\n    }\r\n}\r\n\r\n// funcion de captura de datos \r\nfunction capturaDatos(){\r\n  // Capturamos el dato de nombre \r\n  const nombreInput= document.querySelector('#nombre')\r\n  nombreInput.addEventListener('input', (e)=>{\r\n    usuario.usuarioNombre= e.target.value.trim();\r\n    \r\n  })\r\n  \r\n  // Capturamos el dato de Carrera Universidad\r\n  const carreraSelector=document.querySelector('#carrera');\r\n  carreraSelector.addEventListener('click', e=>{\r\n  usuario.usuarioCarrera= parseInt(e.target.value);\r\n  })\r\n\r\n  // Capturamos el correo del usuario\r\n  const correoInput=document.querySelector('#email');\r\n  correoInput.addEventListener('input',(e)=> {\r\n    usuario.usuarioEmail=e.target.value.trim();\r\n    \r\n  })\r\n\r\n  // Capturamos la contraseña del usuario\r\n  const passInput= document.querySelector('#password');\r\n  passInput.addEventListener('input', (e)=>{\r\n    usuario.usuarioPassword=e.target.value.trim();\r\n  }) \r\n  \r\n \r\n}\r\n\r\n// funcion de las alarmas\r\nfunction mostrarAlerta(mensaje , tipo){\r\n  const alerta= document.createElement('DIV');\r\n  alerta.textContent= mensaje;\r\n  alerta.classList.add('alerta')\r\n  if(tipo == 'error'){\r\n    alerta.classList.add('error');\r\n  }else{\r\n    alerta.classList.add('creado');\r\n  }\r\n  const formulario= document.querySelector('.formulario_usuarios');\r\n  formulario.appendChild(alerta);\r\n\r\n  setTimeout(()=>{\r\n    alerta.remove();\r\n  }, 5000)\r\n\r\n}\r\n\r\n// funcion de validacion de las politicas \r\nfunction politicasAceptacion(){\r\n  const politicas = document.getElementById('opt-in').checked;\r\n  console.log(politicas);\r\n  if(politicas){\r\n    usuario.usuarioPoliticaDatos=1;\r\n  }else{\r\n    usuario.usuarioPoliticaDatos=0;\r\n  }\r\n}\r\n\r\n// validacion de campos obligatorios \r\nfunction validacionCampos(){\r\n  if(usuario.usuarioNombre === '' || usuario.usuarioCarrera === '' || usuario.usuarioEmail === '' \r\n  || usuarioPassword === ''){\r\n   mostrarAlerta(\"Es necesario llenar nombre, contraseña, carrera y correo \", 'error');\r\n   console.log(usuario)\r\n   e.preventDefault;\r\n  }else{\r\n   mostrarAlerta(\"Usuario Creado Correctamente\", 'correcto');\r\n   conectarApi();\r\n   console.log('estoy enviando ....')\r\n   console.log(usuario)\r\n  }\r\n}\r\n\r\n// de ejecucion de el envio del usuario \r\nfunction enviarObjeto(){\r\n  const boton = document.querySelector('#envio')\r\n  boton.addEventListener('click',(e)=>{\r\n// validamos la aceptacion de las politicas \r\npoliticasAceptacion();\r\n //   validacion de los campos y la ejecucion con el API\r\n validacionCampos();\r\n})\r\n}\r\n\r\n"]}