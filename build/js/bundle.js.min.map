{"version":3,"sources":["app.js","seccion.js"],"names":["pagina","usuario","usuarioNombre","usuarioEmail","usuarioPassword","usuarioPoliticaDatos","usuarioCarrera","iniciarPagina","llenarSelector","enviarObjeto","mostrarSeccion","cambiarSeccion","capturaDatosEstudiante","capturaDatosEmpleado","async","carrera","fetch","method","data","json","selector","document","querySelector","forEach","carreraNombre","carreraId","option","createElement","classList","add","value","innerHTML","appendChild","error","console","log","conectarApi","tabla","url","body","JSON","stringify","estudianteNombre","estudianteEmail","estudiantePassword","estudiantePoliticaDatos","fk_carreraId","headers","Content-Type","then","response","empleadoNombre","empleadoEmail","empleadoPassword","empleadoPoliticaDatos","addEventListener","e","target","trim","parseInt","mostrarAlerta","mensaje","tipo","alerta","textContent","setTimeout","remove","politicasAceptacion","politicas","getElementById","checked","validacionCampos","seccionAnterior","querySelectorAll","boton","preventDefault","dataset"],"mappings":"AACA,IAAAA,OAAA,EAGA,MAAAC,QAAA,CACAC,cAAA,GACAC,aAAA,GACAC,gBAAA,GACAC,qBAAA,GACAC,eAAA,IAOA,SAAAC,gBAGAC,iBAGAC,eAGAC,iBAGAC,iBAGAC,yBAGAC,uBAKAC,eAAAN,iBAGA,IACA,MAAAO,QAAAC,MAFA,sCAEA,CAAAC,OAAA,QACAC,QAAAH,EAAAI,OAGAC,EAAAC,SAAAC,cAAA,YAGAJ,EAAAK,QAAAR,IACA,MAAAS,cAAAA,EAAAC,UAAAA,GAAAV,EAGAW,EAAAL,SAAAM,cAAA,UACAD,EAAAE,UAAAC,IAAA,iBACAH,EAAAI,MAAAL,EACAC,EAAAK,UAAAP,EAGAJ,EAAAY,YAAAN,KAEA,MAAAO,GACAC,QAAAC,IAAAF,IAMA,SAAAG,cAEA,IACA,IAAAC,EACAC,EACA,IAAAtC,QACAqC,EAAA,cACAC,EAAA,6BAAAD,KACAH,QAAAC,IAAAlC,SACAe,MAAAsB,EAAA,CAAArB,OAAA,OACAsB,KAAAC,KAAAC,UAAA,CACAC,iBAAAzC,QAAAC,cACAyC,gBAAA1C,QAAAE,aACAyC,mBAAA3C,QAAAG,gBACAyC,wBAAA5C,QAAAI,qBACAyC,aAAA7C,QAAAK,iBAEAyC,QAAA,CACAC,eAAA,sBAGAC,KAAAC,GAAAA,EAAA/B,QACA8B,KAAA/B,IACAgB,QAAAC,IAAAjB,MACA,IAAAlB,SACAqC,EAAA,YACAC,EAAA,6BAAAD,KACAH,QAAAC,IAAAlC,SACAe,MAAAsB,EAAA,CAAArB,OAAA,OACAsB,KAAAC,KAAAC,UAAA,CACAU,eAAAlD,QAAAC,cACAkD,cAAAnD,QAAAE,aACAkD,iBAAApD,QAAAG,gBACAkD,sBAAArD,QAAAI,uBAEA0C,QAAA,CACAC,eAAA,sBAGAC,KAAAC,GAAAA,EAAA/B,QACA8B,KAAA/B,IACAgB,QAAAC,IAAAjB,MAGA,MAAAe,GACAC,QAAAC,IAAAF,IAKA,SAAArB,yBAEAS,SAAAC,cAAA,WACAiC,iBAAA,QAAAC,IACAvD,QAAAC,cAAAsD,EAAAC,OAAA3B,MAAA4B,OACAxB,QAAAC,IAAAlC,WAIAoB,SAAAC,cAAA,YACAiC,iBAAA,QAAAC,IACAvD,QAAAK,eAAAqD,SAAAH,EAAAC,OAAA3B,OACAI,QAAAC,IAAAlC,WAIAoB,SAAAC,cAAA,UACAiC,iBAAA,QAAAC,IACAvD,QAAAE,aAAAqD,EAAAC,OAAA3B,MAAA4B,OACAxB,QAAAC,IAAAlC,WAKAoB,SAAAC,cAAA,aACAiC,iBAAA,QAAAC,IACAvD,QAAAG,gBAAAoD,EAAAC,OAAA3B,MAAA4B,OACAxB,QAAAC,IAAAlC,WAKA,SAAAY,uBACAQ,SAAAC,cAAA,mBACAiC,iBAAA,QAAAC,IACAvD,QAAAC,cAAAsD,EAAAC,OAAA3B,MAAA4B,SAGArC,SAAAC,cAAA,kBACAiC,iBAAA,QAAAC,IACAvD,QAAAE,aAAAqD,EAAAC,OAAA3B,MAAA4B,SAGArC,SAAAC,cAAA,qBACAiC,iBAAA,QAAAC,IACAvD,QAAAG,gBAAAoD,EAAAC,OAAA3B,MAAA4B,SAKA,SAAAE,cAAAC,EAAAC,GACA,MAAAC,EAAA1C,SAAAM,cAAA,OASA,GARAoC,EAAAC,YAAAH,EACAE,EAAAnC,UAAAC,IAAA,UACA,SAAAiC,EACAC,EAAAnC,UAAAC,IAAA,SAEAkC,EAAAnC,UAAAC,IAAA,UAGA,IAAA7B,OAAA,CACAqB,SAAAC,cAAA,aACAU,YAAA+B,OACA,CACA1C,SAAAC,cAAA,aACAU,YAAA+B,GAEAE,WAAA,KACAF,EAAAG,UACA,KAKA,SAAAC,sBACA,MAAAC,EAAA/C,SAAAgD,eAAA,UAAAC,QACApC,QAAAC,IAAAiC,GAEAnE,QAAAI,qBADA+D,EACA,EAEA,EAKA,SAAAG,mBACA,IAAAvE,OACA,KAAAC,QAAAC,eAAA,KAAAD,QAAAK,gBAAA,KAAAL,QAAAE,cACA,KAAAF,QAAAG,iBACAwD,cAAA,4DAAA,SACA1B,QAAAC,IAAAlC,WAEA2D,cAAA,+BAAA,YACAxB,cACAF,QAAAC,IAAA,uBACAD,QAAAC,IAAAlC,UAGA,KAAAA,QAAAC,eAAA,KAAAD,QAAAE,cACA,KAAAF,QAAAG,iBACAwD,cAAA,mDAAA,SACA1B,QAAAC,IAAAlC,SACAiC,QAAAC,IAAAnC,UAEA4D,cAAA,+BAAA,YACAxB,cACAF,QAAAC,IAAAnC,QACAkC,QAAAC,IAAA,uBACAD,QAAAC,IAAAlC,UAMA,SAAAQ,eACAY,SAAAC,cAAA,UACAiC,iBAAA,QAAAC,IAEA,IAAAxD,QACAkC,QAAAC,IAAAnC,QAEAY,2BAEAsB,QAAAC,IAAAnC,QAEAa,wBAEAqB,QAAAC,IAAAlC,SAEAkE,sBAEAI,qBC1PA,SAAA7D,iBAEA,MAAA8D,EAAAnD,SAAAC,cAAA,mBACAkD,GACAA,EAAA5C,UAAAsC,OAAA,kBAIA7C,SAAAC,cAAA,WAAAtB,QACA4B,UAAAC,IAAA,kBAGA,SAAAlB,iBACAU,SAAAoD,iBAAA,gBACAlD,QAAAmD,IACAA,EAAAnB,iBAAA,QAAAC,IACAA,EAAAmB,iBACA3E,OAAA2D,SAAAH,EAAAC,OAAAmB,QAAA5E,QAGAU,qBDRAW,SAAAkC,iBAAA,mBAAA,KACAhD","file":"bundle.js","sourcesContent":["// paginado de los formularios\r\nlet pagina=1;\r\n\r\n// objeto que se envia a la base de datos \r\nconst usuario={\r\n  usuarioNombre: '',\r\n  usuarioEmail: '',\r\n  usuarioPassword: '',\r\n  usuarioPoliticaDatos: '',\r\n  usuarioCarrera: ''\r\n}\r\n\r\ndocument.addEventListener(\"DOMContentLoaded\", ()=>{\r\n    iniciarPagina();   \r\n});\r\n\r\nfunction iniciarPagina(){\r\n\r\n  //LLenar selector de las carrera de la Universidad\r\n  llenarSelector();\r\n\r\n  // enviar objeto \r\n  enviarObjeto();\r\n\r\n  // asigna la clase de mostrarseccion actual en la pagina \r\n  mostrarSeccion();\r\n\r\n  // cambiamos la seccion al formulario elegido\r\n  cambiarSeccion();\r\n\r\n  // Capturamos la informacion de formulario estudiantes\r\n  capturaDatosEstudiante();\r\n\r\n  // Capturamos la informacion de formulario Empleado\r\n  capturaDatosEmpleado();\r\n\r\n}\r\n\r\n// se trae infromacion de la base dedatos y se llena el selector \r\nasync function llenarSelector(){\r\n  // se conecta a la tabla de carreras\r\n  const urlcarrera= 'http://localhost:3000/api/carreras/';\r\n  try {\r\n    const carrera= await fetch(urlcarrera,{method:'GET'})\r\n    const data = await carrera.json();\r\n    \r\n  // se selecciona el select  \r\n    const selector= document.querySelector('#carrera')\r\n\r\n  // se recorrer el arreglo de las carreras\r\n  data.forEach(carrera =>{\r\n    const {carreraNombre, carreraId}= carrera;\r\n\r\n  //se crear elemneto option para agregar al select y se le asigna una carrera de el arreglo\r\n    const option = document.createElement('OPTION');\r\n    option.classList.add('opcionCarrera')\r\n    option.value= carreraId;\r\n    option.innerHTML=carreraNombre;\r\n\r\n  // se agregar el option de la carrera a el selector \r\n    selector.appendChild(option)\r\n  })\r\n  } catch (error) {\r\n    console.log(error)\r\n  }\r\n \r\n}\r\n\r\n// funcion de conexion de api para el envio de estudiantes\r\n function conectarApi(){\r\n  //  se conecta a el BackEnd y se realiza un metodo POST\r\n    try {\r\n      let tabla;\r\n      let url ;\r\n      if(pagina === 1){\r\n        tabla='estudiantes'\r\n        url=`http://localhost:3000/api/${tabla}/`\r\n        console.log(usuario)\r\n        fetch(url,{method:'POST',\r\n        body: JSON.stringify({\r\n          estudianteNombre:usuario.usuarioNombre,\r\n          estudianteEmail:usuario.usuarioEmail,\r\n          estudiantePassword: usuario.usuarioPassword,\r\n          estudiantePoliticaDatos: usuario.usuarioPoliticaDatos,\r\n          fk_carreraId: usuario.usuarioCarrera\r\n        }),\r\n        headers: {\r\n          'Content-Type': 'application/json'\r\n        }\r\n      })\r\n        .then(response => response.json())\r\n        .then(data => {\r\n          console.log(data)})\r\n      }else if(pagina === 2){\r\n        tabla='empleados'\r\n        url=`http://localhost:3000/api/${tabla}/`\r\n        console.log(usuario)\r\n        fetch(url,{method:'POST',\r\n        body: JSON.stringify({\r\n          empleadoNombre:usuario.usuarioNombre,\r\n          empleadoEmail:usuario.usuarioEmail,\r\n          empleadoPassword: usuario.usuarioPassword,\r\n          empleadoPoliticaDatos: usuario.usuarioPoliticaDatos,\r\n        }),\r\n        headers: {\r\n          'Content-Type': 'application/json'\r\n        }\r\n      })\r\n        .then(response => response.json())\r\n        .then(data => {\r\n          console.log(data)})\r\n      }\r\n     \r\n    } catch (error) {\r\n        console.log(error)\r\n    }\r\n}\r\n\r\n// funcion de captura de datos \r\nfunction capturaDatosEstudiante(){\r\n  // Capturamos el dato de nombre \r\n  const nombreInput= document.querySelector('#nombre')\r\n  nombreInput.addEventListener('input', (e)=>{\r\n    usuario.usuarioNombre= e.target.value.trim();\r\n    console.log(usuario) \r\n  })\r\n  \r\n  // Capturamos el dato de Carrera Universidad\r\n  const carreraSelector=document.querySelector('#carrera');\r\n  carreraSelector.addEventListener('click', e=>{\r\n  usuario.usuarioCarrera= parseInt(e.target.value);\r\n  console.log(usuario)\r\n  })\r\n\r\n  // Capturamos el correo del usuario\r\n  const correoInput=document.querySelector('#email');\r\n  correoInput.addEventListener('input',(e)=> {\r\n    usuario.usuarioEmail=e.target.value.trim();\r\n    console.log(usuario)\r\n    \r\n  })\r\n\r\n  // Capturamos la contraseña del usuario\r\n  const passInput= document.querySelector('#password');\r\n  passInput.addEventListener('input', (e)=>{\r\n    usuario.usuarioPassword=e.target.value.trim();\r\n    console.log(usuario)\r\n  }) \r\n\r\n}\r\n\r\nfunction capturaDatosEmpleado(){\r\n const nombreEmpleado = document.querySelector('#nombreempleado');\r\n nombreEmpleado.addEventListener('input', e =>{\r\n   usuario.usuarioNombre = e.target.value.trim();\r\n })\r\n\r\n const correoEmpleado= document.querySelector('#emailempleado');\r\n correoEmpleado.addEventListener('input', e =>{\r\n   usuario.usuarioEmail= e.target.value.trim();\r\n })\r\n\r\n const contraseñaEmpleado= document.querySelector('#passwordempleado');\r\n contraseñaEmpleado.addEventListener('input', e =>{\r\n   usuario.usuarioPassword= e.target.value.trim();\r\n })\r\n}\r\n\r\n// funcion de las alarmas\r\nfunction mostrarAlerta(mensaje , tipo){\r\n  const alerta= document.createElement('DIV');\r\n  alerta.textContent= mensaje;\r\n  alerta.classList.add('alerta')\r\n  if(tipo == 'error'){\r\n    alerta.classList.add('error');\r\n  }else{\r\n    alerta.classList.add('creado');\r\n  }\r\n\r\n  if(pagina=== 1){\r\n    const formulario= document.querySelector('.mensaje1');\r\n  formulario.appendChild(alerta);\r\n  }else{\r\n    const formulario2= document.querySelector('.mensaje2');\r\n  formulario2.appendChild(alerta);\r\n  }\r\n  setTimeout(()=>{\r\n    alerta.remove();\r\n  }, 5000)\r\n\r\n}\r\n\r\n// funcion de validacion de las politicas \r\nfunction politicasAceptacion(){\r\n  const politicas = document.getElementById('opt-in').checked;\r\n  console.log(politicas);\r\n  if(politicas){\r\n    usuario.usuarioPoliticaDatos=1;\r\n  }else{\r\n    usuario.usuarioPoliticaDatos=0;\r\n  }\r\n}\r\n\r\n// validacion de campos obligatorios \r\nfunction validacionCampos(){\r\n  if(pagina === 1){\r\n  if(usuario.usuarioNombre === '' || usuario.usuarioCarrera === '' || usuario.usuarioEmail === '' \r\n  || usuario.usuarioPassword === ''){\r\n   mostrarAlerta(\"Es necesario llenar nombre, contraseña, carrera y correo \", 'error');\r\n   console.log(usuario)\r\n  }else{\r\n   mostrarAlerta(\"Usuario Creado Correctamente\", 'correcto');\r\n   conectarApi();\r\n   console.log('estoy enviando ....')\r\n   console.log(usuario)\r\n  }\r\n  }else{\r\n    if(usuario.usuarioNombre === '' || usuario.usuarioEmail === '' \r\n  || usuario.usuarioPassword === ''){\r\n   mostrarAlerta(\"Es necesario llenar nombre, contraseña y correo \", 'error');\r\n   console.log(usuario)\r\n   console.log(pagina)\r\n  }else{\r\n   mostrarAlerta(\"Usuario Creado Correctamente\", 'correcto');\r\n   conectarApi();\r\n   console.log(pagina)\r\n   console.log('estoy enviando ....')\r\n   console.log(usuario)\r\n  }\r\n  } \r\n}\r\n\r\n// de ejecucion de el envio del usuario \r\nfunction enviarObjeto(){\r\n  const boton = document.querySelector('#envio')\r\n  boton.addEventListener('click',(e)=>{\r\n// se valida la informacion que se captura \r\nif(pagina === 1){\r\n  console.log(pagina)\r\n   // Capturamos la informacion de formulario estudiantes\r\n   capturaDatosEstudiante();\r\n}else {\r\n  console.log(pagina)\r\n  // Capturamos la informacion de formulario empleado\r\n  capturaDatosEmpleado();\r\n}\r\n    console.log(usuario)\r\n// validamos la aceptacion de las politicas \r\n politicasAceptacion();\r\n //validacion de los campos y la ejecucion con el API\r\n validacionCampos();\r\n})\r\n}\r\n\r\n","function mostrarSeccion(){\r\n    // elimina la clase de mostrar seccion si esta en otro formulario\r\n    const seccionAnterior = document.querySelector('.mostrarseccion');\r\n    if(seccionAnterior){\r\n        seccionAnterior.classList.remove('mostrarseccion')\r\n    }\r\n\r\n    // Asignamos la clase de mostrar seccion en el formulario actual \r\n    const seccionActual = document.querySelector(`#pagina-${pagina}`);\r\n    seccionActual.classList.add('mostrarseccion')\r\n}\r\n\r\nfunction cambiarSeccion(){\r\n    const botones=document.querySelectorAll(\".tabs button\");\r\n    botones.forEach((boton) =>{\r\n        boton.addEventListener('click', (e) =>{\r\n            e.preventDefault();\r\n            pagina = parseInt(e.target.dataset.pagina)\r\n\r\n            // se llama la funcion de mostrar seccion\r\n            mostrarSeccion()\r\n        })\r\n    })\r\n}"]}